/* Set page resets and properties that apply to whole page*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-size: 1.2rem;
}

/* Set variables to reuse instead of hardcoding */
:root {
    --panel-padding-tb: 30px;
    --panel-padding-lr: 50px;
    --side-panel-bg-color: #d9d9d9;
    --main-container-bg-color: #f3f1f2;
    --side-panel-input-color: #f1e8e9;
    --main-container-input-color: #c0baba;
    --canvas-color: #e6dada;
    --main-font-family: 'Nunito', system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    --page-btm-padding: 8px;
    --input-height: 31px;
    --canvas-container-gap: 10px;
    --insert-delete-reserve-space: calc(var(--input-height) + var(--canvas-container-gap));
}

/* SET LAYOUT, SIZING AND FONT PROPERTIES*/

body {
    display: flex;
    font-family: var(--main-font-family);
    min-height: 100vh;
}

button,
label[for="fileInput"] {
    font-family: var(--main-font-family);
    border: none;
    border-radius: 3px;
    padding: 0.5rem 1.7rem;
}

label[for="fileInput"] {
    display: block;
    text-align: center;
}

.side-panel input[type="file"] {
    display: none;
}

button:hover {
    transform: scale(1.1);
}

#canvas {
    background-color: var(--canvas-color);
}

.insert-delete-container li {
    display: inline;
}

.visible {
    visibility: visible;
}

ul {
    list-style: none;
    width: 100%;
}

h2 {
    text-align: center;
    font-size: 1.5rem;
    margin-bottom: 0.9rem;
    font-weight: 1000;
}

.side-panel ul:first-child li {
    display: flex;
    justify-content: space-between;
}

.side-panel li {
    margin-top: 0.5rem;
}

.side-panel,
.main-container,
.canvas-container,
.parameters-container {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.insert-delete-container {
    align-self: flex-start;
}

.parameters-container {
    justify-content: space-between;
    flex: auto;
}

.canvas-container {
    justify-content: flex-start;
    height: 100%;
}

.canvas-container {
    gap: var(--canvas-container-gap);
}

.main-container,
.side-panel {
    padding: calc(var(--panel-padding-tb) - 1.3rem) var(--panel-padding-lr) calc(var(--page-btm-padding) + 4px) var(--panel-padding-lr);
    min-height: 100%;
}

.side-panel {
    flex: auto;
    justify-content: space-between;
}

.main-container {
    flex: 2 1 auto;
}

input {
    width: 100px;
    border: none;
    font-size: 0.9rem;
    height: var(--input-height);
    padding: 0px 10px;
}

.custom-tree-btn {
    margin-top: auto;
}

.random-tree-btn {
    margin-top: 25px;
}

.parameters-container li {
    /* display: flex; */
    justify-content: space-between;
    gap: 5px;
}

.label-error {
    color: red;
}

input#num-nodes {
    margin-left: auto;
}

ul li:first-child~li {
    margin-top: 10px;
}

label {
    margin: 0px 6px 0px 0px;
}

.insert-delete-container li:first-child~li {
    margin-left: 20px;
}

#error-message {
    color: red;
    width: 16rem;
    text-align: center;
}

.controls section {
    width: fit-content;
    margin: auto;
}

.controls section:first-child {
    margin-bottom: 0.5rem;
}

/* Set color themes onto page */

.side-panel {
    background-color: var(--side-panel-bg-color);
}

.side-panel button,
.side-panel input, 
label[for="fileInput"] {
    background-color: var(--side-panel-input-color);
}

.side-panel button,
label[for="fileInput"] {
    width: 100%;
}

.main-container {
    background-color: var(--main-container-bg-color);
}

.main-container input,
.main-container button {
    background-color: var(--main-container-input-color);
}

div.canvas-scroll {
    width: 100%;
    height: 100%;
    overflow: auto;
}

.invisible {
    display: none;
}

#parameters-container-q.visible {
    display: flex;
}

#parameters-container-q label {
    margin: auto;
}

label#question {
    margin: auto;
}

#treeDegree {
    font-size: 1.5rem;
    font-weight: bold;
}

/* getting started guide pop-up */
.guide {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
}

.guide-content {
    background-color: #f4f4f4;
    margin: 10% auto;
    padding: 20px;
    border: 1px solid #888;
    border-radius: 5px;
    width: 60%;
}

.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

#guide-heading {
    text-decoration: underline;
}

/* END---getting started guide pop-up */

/* dark mode toggle icon styles*/
i.dark-mode-toggle {
    display: block;
    align-self: flex-start;
    font-size: 1.4rem;
    margin-bottom: 1.2rem;
    color: #444;
}

i.reset-icon {
    display: block;
    color: #444;
    font-size: 1.4rem;
}

.icon-container {
    margin: 0rem 0rem 2rem 2rem;
    position: fixed;
    top: calc(var(--panel-padding-tb) - 1.3rem);
    left: calc(var(--panel-padding-tb) - 0.7rem);
}

body.dark-mode i {
    color: white;
}

i:hover {
    transform: scale(1.2, 1.2);
}

/* dark mode toggle color style */
body.dark-mode {
    --side-panel-bg-color: #333;
    --main-container-bg-color: #444;
    --side-panel-input-color: #222;
    --main-container-input-color: #111;
    --canvas-color: #222;
    color: white !important;

    .guide-content {
        background-color: #111;
    }

    .close:hover {
        color: white;
    }
}

body.dark-mode button,
body.dark-mode .dark-mode button {
    color: white;
}

body.dark-mode input {
    color: white;
}

body.dark-mode button:disabled {
    color: grey;
}

/* Style the checkbox in a custom way*/
input[type="checkbox"] {
    appearance: none;
    position: relative;
    width: 1.5em;
    height: 1.5em;
    border: none;
    background-color: var(--side-panel-input-color);
    /* Adjusts the position of the checkboxes on the text baseline */
    vertical-align: -2px;
    /* Set here so that Windows' High-Contrast Mode can override */
    color: rgb(28, 28, 28);
}

input[type="checkbox"]::before {
    content: "âœ”";
    position: absolute;
    font-size: 1.7em;
    right: -1px;
    top: -0.13em;
    visibility: hidden;
}

input[type="checkbox"]:checked::before {
    /* Use `visibility` instead of `display` to avoid recalculating layout */
    visibility: visible;
}

.popup {
    display: none;
    position: fixed;
    top: -10%;
    left: 0;
    width: 100%;
    height: 60%;
    z-index: 1;
}

.solbutton {
    display: none;
}

.solution {
    background-color: #f4f4f4;
    margin: 10% auto;
    padding: 20px;
    border: 1px solid #888;
    border-radius: 5px;
    width: 70%;
}

#solution-heading {
    text-decoration: underline;
}
  

  
  /* .close {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 24px;
    cursor: pointer;
  } */
  
  #solution-canvas {
    width: 100%; 
    height: 60%;
    top: 0;
    left: 0;
    border: 1px solid #000;
  }
  
/* Small to big and big to small transition */

.question.scale-small {
    transform: scale(0.6, 0.6);
    transition: transform 4.5s ease-in 0s;
}

.question {
    transform: scale(1.0, 1.0);
}

.question label {
    font-size: 1.8rem;
}

.holder {
    width: 900px;
    height: 670px;
    position: relative;
}

.holder ul {
    color: rgb(64, 60, 58);
    position: absolute;
    top: 10px;
    right: 10px;
    width: fit-content;
}

body.dark-mode .holder ul {
    color: white;
}